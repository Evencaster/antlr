// Generated from Antlr.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001c\u00b7\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0003\u0002\u0006\u00029\n\u0002\r\u0002\u000e",
    "\u0002:\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005",
    "\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0005\u0007I\n\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003",
    "\b\u0003\b\u0003\b\u0003\b\u0003\b\u0005\bT\n\b\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0005\tZ\n\t\u0003\n\u0006\n]\n\n\r\n\u000e\n^\u0003\n\u0006",
    "\nb\n\n\r\n\u000e\nc\u0005\nf\n\n\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0003\u000b",
    "\u0005\u000bq\n\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e\u0003",
    "\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011\u0003",
    "\u0011\u0003\u0012\u0006\u0012\u0080\n\u0012\r\u0012\u000e\u0012\u0081",
    "\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0003\u0014\u0005\u0014\u008b\n\u0014\u0003\u0014\u0003\u0014\u0006",
    "\u0014\u008f\n\u0014\r\u0014\u000e\u0014\u0090\u0003\u0015\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0016\u0003\u0016",
    "\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017",
    "\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018",
    "\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u001a",
    "\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0002\u0002",
    "\u001c\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f",
    "\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d",
    "\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018",
    "/\u00191\u001a3\u001b5\u001c\u0003\u0002\b\u0003\u00022;\u0004\u0002",
    ">>@@\u0005\u00022;aac|\u0005\u00022;C\\aa\u0005\u0002\u000b\f\u000f",
    "\u000f\"\"\u0004\u0002\f\f\u000f\u000f\u0002\u00c5\u0002\u0003\u0003",
    "\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003",
    "\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003",
    "\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003",
    "\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003",
    "\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017\u0003",
    "\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b\u0003",
    "\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f\u0003",
    "\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003\u0002",
    "\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002",
    "\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002\u0002",
    "\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002\u0002\u0002",
    "1\u0003\u0002\u0002\u0002\u00023\u0003\u0002\u0002\u0002\u00025\u0003",
    "\u0002\u0002\u0002\u00038\u0003\u0002\u0002\u0002\u0005<\u0003\u0002",
    "\u0002\u0002\u0007>\u0003\u0002\u0002\u0002\t@\u0003\u0002\u0002\u0002",
    "\u000bB\u0003\u0002\u0002\u0002\rH\u0003\u0002\u0002\u0002\u000fS\u0003",
    "\u0002\u0002\u0002\u0011Y\u0003\u0002\u0002\u0002\u0013e\u0003\u0002",
    "\u0002\u0002\u0015p\u0003\u0002\u0002\u0002\u0017r\u0003\u0002\u0002",
    "\u0002\u0019t\u0003\u0002\u0002\u0002\u001bv\u0003\u0002\u0002\u0002",
    "\u001dx\u0003\u0002\u0002\u0002\u001fz\u0003\u0002\u0002\u0002!|\u0003",
    "\u0002\u0002\u0002#\u007f\u0003\u0002\u0002\u0002%\u0085\u0003\u0002",
    "\u0002\u0002\'\u008e\u0003\u0002\u0002\u0002)\u0092\u0003\u0002\u0002",
    "\u0002+\u0098\u0003\u0002\u0002\u0002-\u009b\u0003\u0002\u0002\u0002",
    "/\u00a0\u0003\u0002\u0002\u00021\u00a9\u0003\u0002\u0002\u00023\u00ab",
    "\u0003\u0002\u0002\u00025\u00b2\u0003\u0002\u0002\u000279\t\u0002\u0002",
    "\u000287\u0003\u0002\u0002\u00029:\u0003\u0002\u0002\u0002:8\u0003\u0002",
    "\u0002\u0002:;\u0003\u0002\u0002\u0002;\u0004\u0003\u0002\u0002\u0002",
    "<=\u0007,\u0002\u0002=\u0006\u0003\u0002\u0002\u0002>?\u00071\u0002",
    "\u0002?\b\u0003\u0002\u0002\u0002@A\u0007-\u0002\u0002A\n\u0003\u0002",
    "\u0002\u0002BC\u0007/\u0002\u0002C\f\u0003\u0002\u0002\u0002DE\u0007",
    "(\u0002\u0002EI\u0007(\u0002\u0002FG\u0007~\u0002\u0002GI\u0007~\u0002",
    "\u0002HD\u0003\u0002\u0002\u0002HF\u0003\u0002\u0002\u0002I\u000e\u0003",
    "\u0002\u0002\u0002JK\u0007#\u0002\u0002KT\u0007?\u0002\u0002LM\u0007",
    "?\u0002\u0002MT\u0007?\u0002\u0002NT\t\u0003\u0002\u0002OP\u0007@\u0002",
    "\u0002PT\u0007?\u0002\u0002QR\u0007>\u0002\u0002RT\u0007?\u0002\u0002",
    "SJ\u0003\u0002\u0002\u0002SL\u0003\u0002\u0002\u0002SN\u0003\u0002\u0002",
    "\u0002SO\u0003\u0002\u0002\u0002SQ\u0003\u0002\u0002\u0002T\u0010\u0003",
    "\u0002\u0002\u0002UV\u0007/\u0002\u0002VZ\u0007/\u0002\u0002WX\u0007",
    "-\u0002\u0002XZ\u0007-\u0002\u0002YU\u0003\u0002\u0002\u0002YW\u0003",
    "\u0002\u0002\u0002Z\u0012\u0003\u0002\u0002\u0002[]\t\u0004\u0002\u0002",
    "\\[\u0003\u0002\u0002\u0002]^\u0003\u0002\u0002\u0002^\\\u0003\u0002",
    "\u0002\u0002^_\u0003\u0002\u0002\u0002_f\u0003\u0002\u0002\u0002`b\t",
    "\u0005\u0002\u0002a`\u0003\u0002\u0002\u0002bc\u0003\u0002\u0002\u0002",
    "ca\u0003\u0002\u0002\u0002cd\u0003\u0002\u0002\u0002df\u0003\u0002\u0002",
    "\u0002e\\\u0003\u0002\u0002\u0002ea\u0003\u0002\u0002\u0002f\u0014\u0003",
    "\u0002\u0002\u0002gh\u0007K\u0002\u0002hi\u0007p\u0002\u0002iq\u0007",
    "v\u0002\u0002jk\u0007F\u0002\u0002kl\u0007q\u0002\u0002lm\u0007w\u0002",
    "\u0002mn\u0007d\u0002\u0002no\u0007n\u0002\u0002oq\u0007g\u0002\u0002",
    "pg\u0003\u0002\u0002\u0002pj\u0003\u0002\u0002\u0002q\u0016\u0003\u0002",
    "\u0002\u0002rs\u0007?\u0002\u0002s\u0018\u0003\u0002\u0002\u0002tu\u0007",
    "=\u0002\u0002u\u001a\u0003\u0002\u0002\u0002vw\u0007*\u0002\u0002w\u001c",
    "\u0003\u0002\u0002\u0002xy\u0007+\u0002\u0002y\u001e\u0003\u0002\u0002",
    "\u0002z{\u0007}\u0002\u0002{ \u0003\u0002\u0002\u0002|}\u0007\u007f",
    "\u0002\u0002}\"\u0003\u0002\u0002\u0002~\u0080\t\u0006\u0002\u0002\u007f",
    "~\u0003\u0002\u0002\u0002\u0080\u0081\u0003\u0002\u0002\u0002\u0081",
    "\u007f\u0003\u0002\u0002\u0002\u0081\u0082\u0003\u0002\u0002\u0002\u0082",
    "\u0083\u0003\u0002\u0002\u0002\u0083\u0084\b\u0012\u0002\u0002\u0084",
    "$\u0003\u0002\u0002\u0002\u0085\u0086\u0007H\u0002\u0002\u0086\u0087",
    "\u0007q\u0002\u0002\u0087\u0088\u0007t\u0002\u0002\u0088&\u0003\u0002",
    "\u0002\u0002\u0089\u008b\u0007\u000f\u0002\u0002\u008a\u0089\u0003\u0002",
    "\u0002\u0002\u008a\u008b\u0003\u0002\u0002\u0002\u008b\u008c\u0003\u0002",
    "\u0002\u0002\u008c\u008f\u0007\f\u0002\u0002\u008d\u008f\t\u0007\u0002",
    "\u0002\u008e\u008a\u0003\u0002\u0002\u0002\u008e\u008d\u0003\u0002\u0002",
    "\u0002\u008f\u0090\u0003\u0002\u0002\u0002\u0090\u008e\u0003\u0002\u0002",
    "\u0002\u0090\u0091\u0003\u0002\u0002\u0002\u0091(\u0003\u0002\u0002",
    "\u0002\u0092\u0093\u0007Y\u0002\u0002\u0093\u0094\u0007j\u0002\u0002",
    "\u0094\u0095\u0007k\u0002\u0002\u0095\u0096\u0007n\u0002\u0002\u0096",
    "\u0097\u0007g\u0002\u0002\u0097*\u0003\u0002\u0002\u0002\u0098\u0099",
    "\u0007K\u0002\u0002\u0099\u009a\u0007h\u0002\u0002\u009a,\u0003\u0002",
    "\u0002\u0002\u009b\u009c\u0007G\u0002\u0002\u009c\u009d\u0007n\u0002",
    "\u0002\u009d\u009e\u0007u\u0002\u0002\u009e\u009f\u0007g\u0002\u0002",
    "\u009f.\u0003\u0002\u0002\u0002\u00a0\u00a1\u0007H\u0002\u0002\u00a1",
    "\u00a2\u0007w\u0002\u0002\u00a2\u00a3\u0007p\u0002\u0002\u00a3\u00a4",
    "\u0007e\u0002\u0002\u00a4\u00a5\u0007v\u0002\u0002\u00a5\u00a6\u0007",
    "k\u0002\u0002\u00a6\u00a7\u0007q\u0002\u0002\u00a7\u00a8\u0007p\u0002",
    "\u0002\u00a80\u0003\u0002\u0002\u0002\u00a9\u00aa\u0007.\u0002\u0002",
    "\u00aa2\u0003\u0002\u0002\u0002\u00ab\u00ac\u0007T\u0002\u0002\u00ac",
    "\u00ad\u0007g\u0002\u0002\u00ad\u00ae\u0007v\u0002\u0002\u00ae\u00af",
    "\u0007w\u0002\u0002\u00af\u00b0\u0007t\u0002\u0002\u00b0\u00b1\u0007",
    "p\u0002\u0002\u00b14\u0003\u0002\u0002\u0002\u00b2\u00b3\u0007V\u0002",
    "\u0002\u00b3\u00b4\u0007j\u0002\u0002\u00b4\u00b5\u0007g\u0002\u0002",
    "\u00b5\u00b6\u0007p\u0002\u0002\u00b66\u0003\u0002\u0002\u0002\u000f",
    "\u0002:HSY^cep\u0081\u008a\u008e\u0090\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class AntlrLexer extends antlr4.Lexer {

    static grammarFileName = "Antlr.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, "'*'", "'/'", "'+'", "'-'", null, null, 
                         null, null, null, "'='", "';'", "'('", "')'", "'{'", 
                         "'}'", null, "'For'", null, "'While'", "'If'", 
                         "'Else'", "'Function'", "','", "'Return'", "'Then'" ];
	static symbolicNames = [ null, "NUM", "MULTIPLICATION", "DIV", "PLUS", 
                          "MINUS", "LOGIC", "COMPARE", "UNARY_OPERATOR", 
                          "IDENT", "VAR", "ASSIGN", "SEPARATOR", "LPAREN", 
                          "RPAREN", "LCURLY", "RCURLY", "WS", "FOR", "NEWLINE", 
                          "WHILE", "IF", "ELSE", "FUNCTION", "COMMA", "RETURN", 
                          "THEN" ];
	static ruleNames = [ "NUM", "MULTIPLICATION", "DIV", "PLUS", "MINUS", "LOGIC", 
                      "COMPARE", "UNARY_OPERATOR", "IDENT", "VAR", "ASSIGN", 
                      "SEPARATOR", "LPAREN", "RPAREN", "LCURLY", "RCURLY", 
                      "WS", "FOR", "NEWLINE", "WHILE", "IF", "ELSE", "FUNCTION", 
                      "COMMA", "RETURN", "THEN" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

AntlrLexer.EOF = antlr4.Token.EOF;
AntlrLexer.NUM = 1;
AntlrLexer.MULTIPLICATION = 2;
AntlrLexer.DIV = 3;
AntlrLexer.PLUS = 4;
AntlrLexer.MINUS = 5;
AntlrLexer.LOGIC = 6;
AntlrLexer.COMPARE = 7;
AntlrLexer.UNARY_OPERATOR = 8;
AntlrLexer.IDENT = 9;
AntlrLexer.VAR = 10;
AntlrLexer.ASSIGN = 11;
AntlrLexer.SEPARATOR = 12;
AntlrLexer.LPAREN = 13;
AntlrLexer.RPAREN = 14;
AntlrLexer.LCURLY = 15;
AntlrLexer.RCURLY = 16;
AntlrLexer.WS = 17;
AntlrLexer.FOR = 18;
AntlrLexer.NEWLINE = 19;
AntlrLexer.WHILE = 20;
AntlrLexer.IF = 21;
AntlrLexer.ELSE = 22;
AntlrLexer.FUNCTION = 23;
AntlrLexer.COMMA = 24;
AntlrLexer.RETURN = 25;
AntlrLexer.THEN = 26;



